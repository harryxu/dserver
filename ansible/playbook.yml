---
- hosts: all
  sudo: yes
  vars:
    timezone: Asia/Shanghai

    # Apache vars
    apache_remove_default_vhost: true
    apache_create_vhosts: true
    apache_vhosts:
    - servername: "default_vhost"
      documentroot: "/data/www"
      extra_parameters: |
        <Directory "/data/www">
          Options Indexes FollowSymLinks MultiViews
          AllowOverride All
          Require all granted
        </Directory>
        <FilesMatch "\.php$">
          SetHandler "proxy:fcgi://127.0.0.1:9000"
        </FilesMatch>

    # PHP vars
    php_enable_webserver: true
    php_webserver_daemon: "apache2"
    php_enable_php_fpm: true
    php_fpm_listen: "127.0.0.1:9000"
    php_fpm_listen_allowed_clients: "127.0.0.1"
    php_conf_paths:
      - /etc/php/7.1/fpm
      - /etc/php/7.1/apache2
      - /etc/php/7.1/cli

    php_extension_conf_paths:
      - /etc/php/7.1/fpm/conf.d
      - /etc/php/7.1/apache2/conf.d
      - /etc/php/7.1/cli/conf.d

    php_fpm_daemon: php7.1-fpm
    php_fpm_conf_path: "/etc/php/7.1/fpm"
    php_fpm_pool_conf_path: "/etc/php/7.1/fpm/pool.d/www.conf"

    php_packages:
      - php7.1-fpm
      - php7.1-common
      - php7.1-cli
      - php7.1-dev
      - php7.1-gd
      - php7.1-curl
      - php7.1-imap
      - php7.1-json
      - php7.1-xml
      - php7.1-mbstring
      - php7.1-sqlite3
      - php7.1-mysql
      - php7.1-pdo
      # - php7.1-opcache
      - php-apcu
      - php7.1-zip

    php_pecl_extensions:
      - sqlsrv
      - pdo_sqlsrv


    # Nodejs
    nodejs_version: '10.x'

  pre_tasks:
    - apt_repository:
        repo: 'ppa:ondrej/php'

    - apt_repository:
        repo: 'ppa:git-core/ppa'

    # Microsoft ODBC Driver
    # https://docs.microsoft.com/en-us/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server
    - apt_key:
        url: https://packages.microsoft.com/keys/microsoft.asc
        state: present
    - apt_repository:
        repo: deb [arch=amd64] https://packages.microsoft.com/ubuntu/18.04/prod bionic main
        state: present
    - name: Install mssql packages
      apt:
        pkg:
          - msodbcsql17
          - mssql-tools
          - unixodbc-dev
        state: present
      environment:
        ACCEPT_EULA: Y

  tasks:
    - name: Install required softwares
      apt:
        pkg:
          - git
          - vim
          - tmux
          - autojump
          - apt-transport-https
          - ca-certificates
          - curl
        state: present

    # docker
    - apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: Install docker
      apt:
        pkg:
          - docker-ce
        state: present

    - name: Install Docker Compose
      get_url:
        url: "https://github.com/docker/compose/releases/download/1.22.0/docker-compose-Linux-x86_64"
        dest: "/usr/local/bin/docker-compose"
        force: true
        owner: "root"
        group: "root"
        mode: "0755"

    - stat:
        path: /home/vagrant/.vimrc
      register: vimrc

    - name: Copy vimrc
      command: cp /vagrant/files/vimrc /home/vagrant/.vimrc
      become: yes
      become_user: vagrant
      when: vimrc.stat.exists == False

  roles:
    - geerlingguy.apache
    - geerlingguy.php
    - geerlingguy.php-pecl
    - geerlingguy.apache-php-fpm
    - geerlingguy.composer
    - yatesr.timezone

    - role: gantsign.oh-my-zsh
      users:
        - username: vagrant
          oh_my_zsh:
            theme: ""
            plugins:
              - git
              - autojump

    - geerlingguy.nodejs

  post_tasks:
    - apt_key:
        url: "https://dl.yarnpkg.com/debian/pubkey.gpg"
        state: present

    - apt_repository:
        repo: deb https://dl.yarnpkg.com/debian/ stable main
        state: present
        filename: 'yarn.list'

    - name: Install required softwares in post tasks
      apt:
        pkg:
          - yarn
        state: present

    - copy:
        src: /vagrant/ansible/files/20-sqlsrv.ini
        dest: '{{ php_fpm_conf_path }}/conf.d/20-sqlsrv.ini'

    - copy:
        src: /vagrant/ansible/files/20-sqlsrv.ini
        dest: '/etc/php/7.1/cli/conf.d/20-sqlsrv.ini'

    - include: tasks/pure-prompt.yml
    - include: tasks/tmux-conf.yml
